plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'application'
}

group = 'com.carenation'
version = '1'

applicationName = 'rentalService'  // build.gradle에서 사용할 변수명
archivesBaseName = 'rentalService'  // build/libs/에 생성되는 jar이름

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// lombok
	implementation 'org.projectlombok:lombok'
	annotationProcessor('org.projectlombok:lombok')
	testAnnotationProcessor('org.projectlombok:lombok')

	// mysql
	implementation 'mysql:mysql-connector-java:8.0.33'
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


jar.doLast{
  	copy {
       from 'build/libs/' + applicationName + '-' + version + '.jar'
       into applicationName + '/bin'
    }
        
  	copy {
       from 'build/libs/' + applicationName + '-' + version + '.jar'
       into applicationName + '/bin'
		rename (applicationName + '-' + version + '.jar', "rentalService.jar")
    }
}
